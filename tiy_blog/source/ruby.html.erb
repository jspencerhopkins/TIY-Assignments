---
title: My Iron Yard Odyssey - Home
---

<!-- Add your site or application content here -->

<div id="container">

	<%= partial "/layouts/partials/header" %>

	<div id="content-container1">
		<div id="content-container2">
			<div id="section-navigation">
				
				<br>

				<ul>
					<b>
					<li><a href="#dataTypes">Data Types</a></li>
					<li><a href="#methods">Methods</a></li>
					<li><a href="#">Control Structures</a></li>
					<li><a href="#">Objects/Classes</a></li>
				</b>
				</ul>
			</div>

			<div id="content">
				<h2>
					Ruby
				</h2>
				
				<hr>

				<h3>
					<a name="dataTypes">Data Types</a>
				</h3>

				<ul>
					<li><b>Numbers</b></li>
						<ul>
							<li>Without decimals are called <i>integers</i>.</li>
							<li>With decimals are called <i>floats</i>.</li>
							<li>Simple Arithmetic</li>
								<ul >
									<li>Addition ( + )</li>
									<li>Subtraction ( - )</li>
									<li>Mulitplication ( * )</li>
									<li>Division ( / )</li>
									<br>
									<li>Some examples</li>
									<li class="no-li">
										<%= tag :img, :src => "img/ex_numbers.png" %>
								</ul>		
						</ul>
						
					<br>

					<li><b>Strings</b></li>
						<ul>
							<li>Groups of letters</li>
							<li>Can have punctuation, digits, symbols, and spaces</li>
							<li>Can be added and mulitplied</li>
								<ul>
									<li class="no-li">
										<%= tag :img, :src => "img/ex_strings.png" %>
									</li>
								</ul>
						</ul>
					<br>

					<li><b>Arrays</b></li>
						<ul>
							<li>Ordered, integer-indexed collections of any object</li>
							<li>Indexing starts at 0</li>
							<li>Negative index is assumed to be relative to the end of the array; [-1] indicates the last element of the array</li>
							<li>Can be created by using the literal constructor [ ]</li>
							<li>Can contain different types of objects: integers, strings, floats, etc</li>
							<br>
							<li>Example:</li>
							<li class="no-li">
								<%= tag :img, :src => "img/ex_arrays.png" %>
							</li>
						</ul>

					<br>

					<li><b>Hashes</b></li>
						<ul>
							<li>A dictionary-like collection of unique keys and their values</li>
							<li>Also called associative arrays</li>
							<li>Similar to arrays, but where an Array uses integers as its index, a Hash allows you to use any object type</li>
							<li>Enumerate their values in the order that the corresponding keys were inserted
							<li>Can be created by using the literal constructor { }</li>
							<br>
							<li>Example:</li>
							<li class="no-li">
								<%= tag :img, :src => "img/ex_hashes.png" %>
							</li>
						</ul>

					</ul>
		
				<hr>

				<h3>
					<a name="methods">Methods</a>
				</h3>

				<p>
					Methods are things that do stuff.  If objects (like strings, integers, and floats) are the nouns in Ruby, then methods are like verbs. And, just like in English, you can't have a verb without a noun to do the verb. For example, ticking isn't something that just happens; a clock (or a watch or something) has to do it. In English we would say, "The clock ticks." In Ruby we would say  clock.tick (assuming that clock was a Ruby object, of course). Programmers might say we were "calling clock's  tick method," or that we "called tick on clock." (<%= link_to 'from "Learn to Program" by Chris Pine', 'https://pine.fm/LearnToProgram/chap_05.html' %>)
				</p>

				<p>
					Examples of built-in methods:
					<ul>
						<li>gets, puts, chomp</li>
						<li>to_i, to_s, to_f</li>
					</ul>
				</p>

			<!-- 	<p>
					Examples of  -->




			</div>

			<%= partial "/layouts/partials/footer" %>
		</div>
	</div>	
</div>